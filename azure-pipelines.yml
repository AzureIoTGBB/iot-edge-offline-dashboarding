trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - azure-pipelines.yml

pr:
  autoCancel: true

variables:
  group: edge-deployment-settings
  azureSubscription: "JL - IoT GBB(2033cb47-dd48-4b84-a45d-a58da7fd163a)"
  acrName: jldemoacrdev
  acrResourcePath: /subscriptions/2033cb47-dd48-4b84-a45d-a58da7fd163a/resourceGroups/jl-demo-dev-rg/providers/Microsoft.ContainerRegistry/registries/jldemoacrdev
  CONTAINER_VERSION_TAG: $(GitVersion.AssemblySemVer)
   
stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    # Determine module verion
    - task: gittools.gitversion.gitversion-task.GitVersion@4
      inputs:
        preferBundledVersion: false
      displayName: Determine Semantic Version

    # Build Modules
    - task: AzureIoTEdge@2
      inputs:
        action: 'Build module images'
        templateFilePath: 'deployment.template.json'
        defaultPlatform: 'amd64'
    
    # Push Modules
    - task: AzureIoTEdge@2
      inputs:
        action: 'Push module images'
        containerregistrytype: 'Azure Container Registry'
        azureSubscriptionEndpoint: $(azureSubscription)
        azureContainerRegistry: '{"loginServer":"$(acrName).azurecr.io", "id" : "$(acrResourcePath)"}'
        templateFilePath: 'deployment.template.json'
        defaultPlatform: 'amd64'
        fillRegistryCredential: 'true'

    # Copy the generated manifest to the artifact staging directory
    - shell: |
      cp config/deployment.amd64.json $(Build.ArtifactStagingDirectory)

    # Publish the deployment manifest as a pipeline artifact
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: config

- stage: Release
  jobs:
  - job: Release
    steps:
    # Download deployment manifest from build stage
    - download: current
      artifact: config

    # Deploy to all edge devices
    - task: AzureIoTEdge@2
      displayName: Create Deployment
      inputs:
        action: Deploy to IoT Edge devices
        deploymentFilePath: $(Pipeline.Workspace)/config/deployment.json
        azureSubscription: $(azureSubscription)
        iothubname: jl-demo-iot-dev
        deploymentid: offline-dashboard
        priority: '10'
        deviceOption: Multiple Devices
        targetcondition: '*'
